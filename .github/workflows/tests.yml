name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]
      fail-fast: false # 1つのバージョンが失敗しても他は継続

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # 依存関係のキャッシュを有効化

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; else pip install -r requirements.txt; fi

      - name: Run unit tests
        run: |
          pytest tests/unit/ --cov=. --cov-report=xml -v

      - name: Run integration tests
        run: |
          pytest tests/integration/ --cov=. --cov-report=xml --cov-append -v

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false # カバレッジアップロードの失敗でCIを失敗させない

      - name: Upload test logs
        if: always() # テストが失敗しても実行
        uses: actions/upload-artifact@v4
        with:
          name: test-logs-python-${{ matrix.python-version }}
          path: |
            .pytest_cache/
            htmlcov/
            *.log
